$mq-base-font-size: 16px !default;
$ieSprite: '.lt-ie9' !default;

@function aluminum-sprite($sprite) {
    @return map-get($sprite, sprite);
}

@function aluminum-px2em($px, $base-font-size: $mq-base-font-size) {
    @if unitless($px) {
        @warn "Assuming #{$px} to be in pixels, attempting to convert it into px.";
        @return aluminum-px2em($px + 0px);
    } @else if unit($px) == em {
        @return $px;
    }

    @return ($px / $base-font-size) * 1em;
}

@function aluminum-sprite-attr($sprite, $icon, $attr) {
    $newIcon: map-get($sprite, $icon);

    @if $newIcon == null {
        @warn "Can't find an icon with the name #{$icon}";
    }

    @return map-get($newIcon, $attr);
}

@function aluminum-icon-attr($sprite, $icon) {
    $attr: (
        width: aluminum-sprite-attr($sprite, $icon, width),
        height: aluminum-sprite-attr($sprite, $icon, height),
        x: aluminum-sprite-attr($sprite, $icon, backgroundX),
        y: aluminum-sprite-attr($sprite, $icon, backgroundY)
    );

    @return $attr;
}

@function aluminum-icon-width($sprite, $icon) {
    @return aluminum-px2em(aluminum-sprite-attr($sprite, $icon, width));
}

@function aluminum-icon-height($sprite, $icon) {
    @return aluminum-px2em(aluminum-sprite-attr($sprite, $icon, height));
}

@mixin aluminum-ie-sprite($sprite, $icon, $type: all) {
    $iconMap: aluminum-icon-attr($sprite, $icon);

    @if $ieSprite {
        #{$ieSprite} & {
            @if $type == all {
                // Share the PNG background
                @if function-exists(asset-url) {
                    background-image: asset-url(map-get(aluminum-sprite($sprite), pngPath))
                } @else {
                    background-image: url(map-get(aluminum-sprite($sprite), pngPath))
                }
            }

            // Output dimensions
            @if $type == all or $type == size {
                width: map-get($iconMap, width);
                height: map-get($iconMap, height);
            }

            // Output background position
            @if $type == all or $type == bg {
                background-position: (map-get($iconMap, x) - 5) (map-get($iconMap, y) - 5);
            }
        }
    }
}

@mixin aluminum-icon($sprite, $icon, $type: all) {
    @if $type == all {
        // Share the backgrounds
        display: inline-block;

        @if function-exists(asset-url) {
            background-image: asset-url(map-get(aluminum-sprite($sprite), svgPath));
        } @else {
            background-image: url(map-get($sprite, svgPath));
        }

        background-size: aluminum-px2em(map-get(aluminum-sprite($sprite), width)) aluminum-px2em(map-get(aluminum-sprite($sprite), height));
    }

    $iconMap: aluminum-icon-attr($sprite, $icon);

    // Output dimensions in em
    @if $type == all or $type == size {
        width: aluminum-px2em(map-get($iconMap, width) + 1);
        height: aluminum-px2em(map-get($iconMap, height) + 1);
    }

    // Output background position in em
    @if type == all or $type == bg {
        background-position: aluminum-px2em(map-get($iconMap, x)) aluminum-px2em(map-get($iconMap, y));
    }

    // Add IE fallback
    @include aluminum-ie-sprite($sprite, $icon, $type);
}
